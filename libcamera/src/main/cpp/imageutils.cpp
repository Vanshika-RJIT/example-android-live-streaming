/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <math.h>
#include "include/libyuv.h"

#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     com_mux_libcamera_utils_ImageUtils
 * Method:    N21ToI420
 * Signature: ([BII)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mux_libcamera_utils_ImageUtils_N21ToI420
        (JNIEnv *env, jclass clazz, jbyteArray nv21, jint width, jint height)
{
    int len_src = width * height * 1.5;
    jbyte *src_nv21_data = new jbyte[len_src];
    env->GetByteArrayRegion (nv21, 0, len_src, src_nv21_data);
    jint src_y_size = width * height;
    jint src_u_size = (width >> 1) * (height >> 1);
    jbyte *src_nv21_y_data = src_nv21_data;
    jbyte *src_nv21_vu_data = src_nv21_data + src_y_size;

    jbyte *dst_i420_data = new jbyte[len_src];
    jbyte *dst_i420_y_data = dst_i420_data;
    jbyte *dst_i420_u_data = dst_i420_data + src_y_size;
    jbyte *dst_i420_v_data = dst_i420_data + src_y_size + src_u_size;

    libyuv::NV21ToI420((const uint8 *) src_nv21_y_data, width,
                       (const uint8 *) src_nv21_vu_data, width,
                       (uint8 *) dst_i420_y_data, width,
                       (uint8 *) dst_i420_u_data, width >> 1,
                       (uint8 *) dst_i420_v_data, width >> 1,
                       width, height);

    delete[] src_nv21_data;
    jbyteArray i420 = env->NewByteArray(len_src);
    env->SetByteArrayRegion (i420, 0, len_src, dst_i420_data);
    delete[] dst_i420_data;
    return i420;
}

/*
 * Class:     com_mux_libcamera_utils_ImageUtils
 * Method:    I420ToN21
 * Signature: ([BII)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mux_libcamera_utils_ImageUtils_I420ToN21
        (JNIEnv *env, jclass clazz, jbyteArray i420, jint width, jint height)
{
    int len_src = width * height * 1.5;
    jbyte *src_i420_data = new jbyte[len_src];
    env->GetByteArrayRegion (i420, 0, len_src, src_i420_data);
    jint src_y_size = width * height;
    jint src_u_size = (width >> 1) * (height >> 1);
    jbyte *src_i420_y_data = src_i420_data;
    jbyte *src_i420_u_data = src_i420_data + src_y_size;
    jbyte *src_i420_v_data = src_i420_data + src_y_size + src_u_size;

    jbyte *dst_nv21_data = new jbyte[len_src];
    jbyte *dst_nv21_y_data = dst_nv21_data;
    jbyte *dst_nv21_vu_data = dst_nv21_data + src_y_size;

    libyuv::I420ToNV21(
            (const uint8 *) src_i420_y_data, width,
            (const uint8 *) src_i420_u_data, width >> 1,
            (const uint8 *) src_i420_v_data, width >> 1,
            (uint8 *) dst_nv21_y_data, width,
            (uint8 *) dst_nv21_vu_data, width,
            width, height);

    delete[] src_i420_data;
    jbyteArray nv21 = env->NewByteArray(len_src);
    env->SetByteArrayRegion (nv21, 0, len_src, dst_nv21_data);
    delete[] dst_nv21_data;
    return nv21;
}

/*
 * Class:     com_mux_libcamera_utils_ImageUtils
 * Method:    I420Rotate
 * Signature: ([BIII)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_mux_libcamera_utils_ImageUtils_I420Rotate
        (JNIEnv *env, jclass clazz, jbyteArray i420, jint width, jint height, jint degree)
{
    int len_src = width * height * 1.5;
    jbyte *src_i420_data = new jbyte[len_src];
    env->GetByteArrayRegion (i420, 0, len_src, src_i420_data);
    jint src_i420_y_size = width * height;
    jint src_i420_u_size = (width >> 1) * (height >> 1);
    jbyte *src_i420_y_data = src_i420_data;
    jbyte *src_i420_u_data = src_i420_data + src_i420_y_size;
    jbyte *src_i420_v_data = src_i420_data + src_i420_y_size + src_i420_u_size;

    jbyte *dst_i420_data = new jbyte[len_src];
    jbyte *dst_i420_y_data = dst_i420_data;
    jbyte *dst_i420_u_data = dst_i420_data + src_i420_y_size;
    jbyte *dst_i420_v_data = dst_i420_data + src_i420_y_size + src_i420_u_size;

    if (degree == libyuv::kRotate90 || degree == libyuv::kRotate270) {
        libyuv::I420Rotate((const uint8 *) src_i420_y_data, width,
                           (const uint8 *) src_i420_u_data, width >> 1,
                           (const uint8 *) src_i420_v_data, width >> 1,
                           (uint8 *) dst_i420_y_data, height,
                           (uint8 *) dst_i420_u_data, height >> 1,
                           (uint8 *) dst_i420_v_data, height >> 1,
                           width, height,
                           (libyuv::RotationMode) degree);
    } else {
        libyuv::I420Rotate((const uint8 *) src_i420_y_data, width,
                           (const uint8 *) src_i420_u_data, width >> 1,
                           (const uint8 *) src_i420_v_data, width >> 1,
                           (uint8 *) dst_i420_y_data, width,
                           (uint8 *) dst_i420_u_data, width >> 1,
                           (uint8 *) dst_i420_v_data, width >> 1,
                           width, height,
                           (libyuv::RotationMode) degree);
    }

    delete[] src_i420_data;
    jbyteArray i420r = env->NewByteArray(len_src);
    env->SetByteArrayRegion (i420r, 0, len_src, dst_i420_data);
    delete[] dst_i420_data;
    return i420r;
}

#ifdef __cplusplus
}
#endif



